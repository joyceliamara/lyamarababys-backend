generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id         String     @id @default(uuid())
  sku        String
  name       String
  price      Float
  discount   Float
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
  categories Category[]
  genders    Gender[]
  quantities Quantity[]
  colors     Color[]

  @@map("products")
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  products  Product[]

  @@map("categories")
}

model Gender {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  products  Product[]

  @@map("genders")
}

model Size {
  id         String     @id @default(uuid())
  name       String     @unique
  createdAt  DateTime   @default(now()) @map("created_at")
  updatedAt  DateTime   @updatedAt @map("updated_at")
  quantities Quantity[]

  @@map("sizes")
}

model Quantity {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  size      Size     @relation(fields: [sizeId], references: [id])
  sizeId    String
  count     Int
  Product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String?

  @@map("quantities")
}

model Color {
  id        String    @id @default(uuid())
  name      String    @unique
  code      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  product   Product[]

  @@map("colors")
}
